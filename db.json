{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/huno/source/css/animate.css","path":"css/animate.css","modified":0,"renderable":1},{"_id":"themes/huno/source/css/archive.css","path":"css/archive.css","modified":0,"renderable":1},{"_id":"themes/huno/source/css/china-social-icon.css","path":"css/china-social-icon.css","modified":0,"renderable":1},{"_id":"themes/huno/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"themes/huno/source/css/uno.css","path":"css/uno.css","modified":0,"renderable":1},{"_id":"themes/huno/source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":1},{"_id":"themes/huno/source/images/totop.png","path":"images/totop.png","modified":0,"renderable":1},{"_id":"themes/huno/source/js/awesome-toc.min.js","path":"js/awesome-toc.min.js","modified":0,"renderable":1},{"_id":"themes/huno/source/js/jquery.githubRepoWidget.min.js","path":"js/jquery.githubRepoWidget.min.js","modified":0,"renderable":1},{"_id":"themes/huno/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/huno/source/js/scale.fix.js","path":"js/scale.fix.js","modified":0,"renderable":1},{"_id":"themes/huno/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/huno/source/fonts/china-social/china-social.eot","path":"fonts/china-social/china-social.eot","modified":0,"renderable":1},{"_id":"themes/huno/source/fonts/china-social/china-social.svg","path":"fonts/china-social/china-social.svg","modified":0,"renderable":1},{"_id":"themes/huno/source/fonts/china-social/china-social.ttf","path":"fonts/china-social/china-social.ttf","modified":0,"renderable":1},{"_id":"themes/huno/source/fonts/china-social/china-social.woff","path":"fonts/china-social/china-social.woff","modified":0,"renderable":1},{"_id":"themes/huno/source/fonts/china-social/readme.html","path":"fonts/china-social/readme.html","modified":0,"renderable":1},{"_id":"themes/huno/source/fonts/foundation-icons/foundation-icons.css","path":"fonts/foundation-icons/foundation-icons.css","modified":0,"renderable":1},{"_id":"themes/huno/source/fonts/foundation-icons/foundation-icons.eot","path":"fonts/foundation-icons/foundation-icons.eot","modified":0,"renderable":1},{"_id":"themes/huno/source/fonts/foundation-icons/foundation-icons.ttf","path":"fonts/foundation-icons/foundation-icons.ttf","modified":0,"renderable":1},{"_id":"themes/huno/source/fonts/foundation-icons/foundation-icons.woff","path":"fonts/foundation-icons/foundation-icons.woff","modified":0,"renderable":1},{"_id":"themes/huno/source/fonts/foundation-icons/foundation-icons.svg","path":"fonts/foundation-icons/foundation-icons.svg","modified":0,"renderable":1},{"_id":"themes/huno/source/images/background-cover.jpg","path":"images/background-cover.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/huno/README.en.md","hash":"0878f26ed7fd9d4cbfeb0ddab5e1e14c93be793a","modified":1473352495809},{"_id":"themes/huno/README.md","hash":"8940f32e649ba30b684f347c04826a066fa9f399","modified":1473352495810},{"_id":"themes/huno/_config.yml","hash":"ebcca838f4248403fc544817242593e88f282deb","modified":1473416230375},{"_id":"source/_posts/搭建Hexo教程-一.md","hash":"6667de21f4f2d71ffccc21b1b507cfac0b8b3231","modified":1473413511741},{"_id":"source/_posts/搭建Hexo教程-二.md","hash":"e44409a07bb9551d1681c05eab63e7966492a083","modified":1473415401784},{"_id":"themes/huno/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1473352495802},{"_id":"themes/huno/.git/config","hash":"4f38f9c9501d60cfed21ee72138434fbf66db4f5","modified":1473352495807},{"_id":"themes/huno/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1473352426380},{"_id":"themes/huno/.git/index","hash":"7a53873150708085720ae0d658761383145fe8e0","modified":1473411755121},{"_id":"themes/huno/.git/packed-refs","hash":"8647383fb9ce21a528fa4a1338a8f150043e6e13","modified":1473352495797},{"_id":"themes/huno/layout/archive.ejs","hash":"23aff325ab97b2c7dde6e757fa3add5226a88b4f","modified":1473352495830},{"_id":"themes/huno/layout/category.ejs","hash":"2b412d1b52b9da8ad19f6a66b1c18ab0b7546214","modified":1473352495830},{"_id":"themes/huno/layout/index.ejs","hash":"12c817a875f353c03d8795c2a7b653e4da22c17e","modified":1473352495830},{"_id":"themes/huno/layout/layout.ejs","hash":"4977031185ae4687c0ba0ec1f7aec5050b203726","modified":1473352495831},{"_id":"themes/huno/layout/page-archive.ejs","hash":"ce5523d829c0fdd6a79984fcf15e33572a220df9","modified":1473352495831},{"_id":"themes/huno/layout/page.ejs","hash":"70a50ecf7e1aa9c658212f1e77783dcb287d56a6","modified":1473352495831},{"_id":"themes/huno/layout/post.ejs","hash":"86c9d13e8abdcff4d368e34595e2d2f11f37e9d4","modified":1473352495832},{"_id":"themes/huno/layout/tag.ejs","hash":"fefa03bed577cae2e1aac19bd5d30c5034f453a0","modified":1473352495832},{"_id":"themes/huno/languages/default.yml","hash":"bddd7fd79412849a52b9a36aae36af111b2db619","modified":1473352495823},{"_id":"themes/huno/languages/zh-CN.yml","hash":"fc0fcc3819c03baeecf2aa51cec08257973288cf","modified":1473352495824},{"_id":"themes/huno/languages/zh-TW.yml","hash":"77d7802d83cdeb2d83937ff947232706efb31956","modified":1473352495824},{"_id":"themes/huno/cs-icon.png","hash":"4ba5bfbacb1a533f3561112406c305e9510aa8dd","modified":1473352495812},{"_id":"themes/huno/layout/_partials/list-posts.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1473352495826},{"_id":"themes/huno/layout/_scripts/site-analytics.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1473352495829},{"_id":"themes/huno/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1473352426381},{"_id":"themes/huno/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1473352426381},{"_id":"themes/huno/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1473352426382},{"_id":"themes/huno/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1473352426381},{"_id":"themes/huno/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1473352426389},{"_id":"themes/huno/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1473352426382},{"_id":"themes/huno/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1473352426390},{"_id":"themes/huno/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1473352426390},{"_id":"themes/huno/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1473352426391},{"_id":"themes/huno/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1473352426391},{"_id":"themes/huno/.git/logs/HEAD","hash":"24e35021efc9319ea3de7172b1df567bd2d86ca8","modified":1473352495805},{"_id":"themes/huno/layout/_partials/archive.ejs","hash":"2c413cde5b1d3a475777e8ff8226762dfe92610c","modified":1473352495825},{"_id":"themes/huno/layout/_partials/article.ejs","hash":"12993f72e718ac81763c2095f64b7ef3523f1777","modified":1473352495825},{"_id":"themes/huno/layout/_partials/disqus.ejs","hash":"30c043cc683c78f345a658cf64b37e55e6521685","modified":1473352495825},{"_id":"themes/huno/layout/_partials/duoshuo.ejs","hash":"7cfe423c088a3bf0565e27a1c17d1b99a260786b","modified":1473352495826},{"_id":"themes/huno/layout/_partials/footer.ejs","hash":"59070ce06159cfd45b13c9499b1e4f0a272d1019","modified":1473352495826},{"_id":"themes/huno/layout/_partials/pagination.ejs","hash":"1240c019aa4df269777c54c0d2124b534ec1f380","modified":1473352495827},{"_id":"themes/huno/layout/_partials/side-panel.ejs","hash":"8d38cb60200b157d24866417686b0479def918de","modified":1473352495827},{"_id":"themes/huno/layout/_partials/social.ejs","hash":"9d40db0aa7f062adab1a0dcfa45c57e2a724ac00","modified":1473352495828},{"_id":"themes/huno/layout/_scripts/awesome-toc.ejs","hash":"b39df57929c246726ca45723ca9ad1a4104738c4","modified":1473352495828},{"_id":"themes/huno/layout/_scripts/github-repo-widget.ejs","hash":"ee64a8e431318cb8fb25f59cfeec0def95b58912","modified":1473352495828},{"_id":"themes/huno/layout/_scripts/killie6.ejs","hash":"2d5db8a53962ac704b8bfc40688319bed2e84ac9","modified":1473352495829},{"_id":"themes/huno/layout/_scripts/mathjax.ejs","hash":"2921f9f3b3c3e40f59c2d023764694a79ac07926","modified":1473352495829},{"_id":"themes/huno/source/css/animate.css","hash":"651fcf046b1bd2bff3ab4cb8947ff7fe058de373","modified":1473352495833},{"_id":"themes/huno/source/css/archive.css","hash":"7238ea5f6bda859e3bae7aaa546caf27fe1fb0cc","modified":1473352495834},{"_id":"themes/huno/source/css/china-social-icon.css","hash":"c4940622efebd76407d722876e05833265da4121","modified":1473352495834},{"_id":"themes/huno/source/css/highlight.styl","hash":"1d11785e5cb56e4a26521da4a3983d9c215baa03","modified":1473352495834},{"_id":"themes/huno/source/css/uno.css","hash":"dae2b90f40f9f46b8c3c273898de165e5e594f9e","modified":1473352495835},{"_id":"themes/huno/source/images/avatar.png","hash":"91543994d1be4df00e58d07590a1267fe5393f9c","modified":1473413332273},{"_id":"themes/huno/source/images/totop.png","hash":"4f6cb11941e5a72b03cb00cf9d9d55671b4310eb","modified":1473352495848},{"_id":"themes/huno/source/js/awesome-toc.min.js","hash":"f349e6fdbe575f5e0c54425e558b24671f30274b","modified":1473352495849},{"_id":"themes/huno/source/js/jquery.githubRepoWidget.min.js","hash":"94a141fa474ec5022f7c397b4fd3ff92405ab755","modified":1473352495849},{"_id":"themes/huno/source/js/main.js","hash":"4a477bf23afa10929c4be55ab90c59ce0d9b9842","modified":1473352495850},{"_id":"themes/huno/source/js/scale.fix.js","hash":"ce593f56728cc1cedf2e513cb20b926de3b05e07","modified":1473352495851},{"_id":"themes/huno/source/js/jquery.min.js","hash":"8b6babff47b8a9793f37036fd1b1a3ad41d38423","modified":1473352495850},{"_id":"themes/huno/.git/objects/pack/pack-1ad6c9f3284877fd6cc54bb0e73e0f22cbf3b17a.idx","hash":"705f5020e3af343d52ff293e0b25dd98166f9369","modified":1473352495698},{"_id":"themes/huno/.git/refs/heads/master","hash":"3c4512585bce805b5d221ad0b3f02fb85feb8b65","modified":1473352495803},{"_id":"themes/huno/source/fonts/china-social/china-social.eot","hash":"a43a5c3d66f0d38639a595ebd02857e152ada475","modified":1473352495836},{"_id":"themes/huno/source/fonts/china-social/china-social.svg","hash":"c097f6b54a4883b13ec263f164b79fb2c1981ed3","modified":1473352495836},{"_id":"themes/huno/source/fonts/china-social/china-social.ttf","hash":"2f94360528097df7dcfb39baf8df5393a0d47ca3","modified":1473352495837},{"_id":"themes/huno/source/fonts/china-social/china-social.woff","hash":"74c0ac5268cf7ffe270faaf7c960b74d483d2df1","modified":1473352495837},{"_id":"themes/huno/source/fonts/china-social/readme.html","hash":"8f24e00b8975e09a1e851b45c07a18b382ae08bc","modified":1473352495838},{"_id":"themes/huno/source/fonts/foundation-icons/foundation-icons.css","hash":"426036f1d554b9dffae8b38acc36cade40d9521a","modified":1473352495839},{"_id":"themes/huno/source/fonts/foundation-icons/.fontcustom-data","hash":"3b0cfb3ba2ee7ccae391bc66b3acaa6895932e5f","modified":1473352495838},{"_id":"themes/huno/source/fonts/foundation-icons/foundation-icons.eot","hash":"d584172686583fd510d8f04cf21e6e77fce51435","modified":1473352495840},{"_id":"themes/huno/source/fonts/foundation-icons/foundation-icons.ttf","hash":"4b2bce6c792493a4a5716b6fec2dbefe89492c3f","modified":1473352495842},{"_id":"themes/huno/source/fonts/foundation-icons/foundation-icons.woff","hash":"112fb0e498037f2fea036adb8105e47638159eaa","modified":1473352495843},{"_id":"themes/huno/.git/logs/refs/heads/master","hash":"24e35021efc9319ea3de7172b1df567bd2d86ca8","modified":1473352495804},{"_id":"themes/huno/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1473352495801},{"_id":"themes/huno/source/fonts/foundation-icons/foundation-icons.svg","hash":"bdca38f453f9935203fe8cd071e97d7f8576e0be","modified":1473352495841},{"_id":"themes/huno/.git/logs/refs/remotes/origin/HEAD","hash":"24e35021efc9319ea3de7172b1df567bd2d86ca8","modified":1473352495801},{"_id":"themes/huno/source/images/background-cover.jpg","hash":"d6ddb0ac49f9669fbd0ce5718812fb89aaac44de","modified":1446189527409},{"_id":"themes/huno/demo.gif","hash":"cf6121b4aa0f3b07a2f919099942d97206202aa8","modified":1473352495822},{"_id":"themes/huno/.git/objects/pack/pack-1ad6c9f3284877fd6cc54bb0e73e0f22cbf3b17a.pack","hash":"338a53ec00bc81a9ab6412a9fefe0ecc58eb2e8c","modified":1473352495699},{"_id":"public/2016/09/09/搭建Hexo教程-二/index.html","hash":"a17113faaa4e1e330e5c71ae2bc0984ce3a6f4f1","modified":1473416258736},{"_id":"public/2016/09/09/搭建Hexo教程-一/index.html","hash":"1b2f4cbbadfa2e08992795f93ffea30453cbd094","modified":1473416258736},{"_id":"public/archives/index.html","hash":"590b0f8c92268872e517cc1a709571ec52e9777f","modified":1473416258737},{"_id":"public/archives/2016/index.html","hash":"a42dc079165c79ccde860f32956b51bc41d2d679","modified":1473416258737},{"_id":"public/archives/2016/09/index.html","hash":"e224303c0cc0df06c9f8562b5c73a321863cc9b3","modified":1473416258737},{"_id":"public/index.html","hash":"7fa41acab2dd230e936369256217415fe634f08c","modified":1473416258737},{"_id":"public/tags/hexo/index.html","hash":"9ce9172ca57c50c4973a30197e1f245bfca062ed","modified":1473416258737},{"_id":"public/images/avatar.png","hash":"91543994d1be4df00e58d07590a1267fe5393f9c","modified":1473415132839},{"_id":"public/images/totop.png","hash":"4f6cb11941e5a72b03cb00cf9d9d55671b4310eb","modified":1473415132839},{"_id":"public/fonts/china-social/china-social.eot","hash":"a43a5c3d66f0d38639a595ebd02857e152ada475","modified":1473415132839},{"_id":"public/fonts/china-social/china-social.svg","hash":"c097f6b54a4883b13ec263f164b79fb2c1981ed3","modified":1473415132839},{"_id":"public/fonts/china-social/china-social.ttf","hash":"2f94360528097df7dcfb39baf8df5393a0d47ca3","modified":1473415132839},{"_id":"public/fonts/china-social/china-social.woff","hash":"74c0ac5268cf7ffe270faaf7c960b74d483d2df1","modified":1473415132839},{"_id":"public/fonts/foundation-icons/foundation-icons.eot","hash":"d584172686583fd510d8f04cf21e6e77fce51435","modified":1473415132839},{"_id":"public/fonts/foundation-icons/foundation-icons.ttf","hash":"4b2bce6c792493a4a5716b6fec2dbefe89492c3f","modified":1473415132840},{"_id":"public/fonts/foundation-icons/foundation-icons.woff","hash":"112fb0e498037f2fea036adb8105e47638159eaa","modified":1473415132840},{"_id":"public/css/china-social-icon.css","hash":"2f90442f6d0d289e49c07a85c2dae32cab8b2063","modified":1473415133263},{"_id":"public/css/highlight.css","hash":"701da6788bee02c165236174b6767ae06957f051","modified":1473415133263},{"_id":"public/css/archive.css","hash":"88005d441d52e143cd2ab4da53b1ec50e22f9ade","modified":1473415133263},{"_id":"public/js/awesome-toc.min.js","hash":"b4d0f2a33f8340eb2543e8b2cee0dfd745cfb54a","modified":1473415133264},{"_id":"public/js/jquery.githubRepoWidget.min.js","hash":"94a141fa474ec5022f7c397b4fd3ff92405ab755","modified":1473415133264},{"_id":"public/js/scale.fix.js","hash":"bbf62458c63fca2535965f9dfaacfbc6bc697e03","modified":1473415133265},{"_id":"public/js/main.js","hash":"bafb068e72c56db9e66ac148512b1b21cf5547e1","modified":1473415133265},{"_id":"public/fonts/china-social/readme.html","hash":"ca335751de11d6ef7721dc907571de39cef6e361","modified":1473415133267},{"_id":"public/css/animate.css","hash":"a2f854fbdc52a5657dd5e2b95cc96c0da32f3ea2","modified":1473415133268},{"_id":"public/css/uno.css","hash":"e302f76eef45c8b42d780b82a8771fa46a1077d2","modified":1473415133268},{"_id":"public/js/jquery.min.js","hash":"06e872300088b9ba8a08427d28ed0efcdf9c6ff5","modified":1473415133268},{"_id":"public/fonts/foundation-icons/foundation-icons.css","hash":"2ad3bb2b4b7d1d67b4d40a9672193638c168c12a","modified":1473415133268},{"_id":"public/fonts/foundation-icons/foundation-icons.svg","hash":"bdca38f453f9935203fe8cd071e97d7f8576e0be","modified":1473415133269},{"_id":"public/images/background-cover.jpg","hash":"d6ddb0ac49f9669fbd0ce5718812fb89aaac44de","modified":1473415133280}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"搭建Hexo教程(一)","date":"2016-09-09T07:47:42.000Z","_content":"# 前言\n好久之前就在试着搭建业内流传得很火的Hexo博客框架,今天趁着项目完工,闲着没事又把博客搭建起来了.\n\n给出几个教程\n\n[HEXO+Github,搭建属于自己的博客(简书)](http://www.jianshu.com/p/465830080ea9)\n\n[Hexo搭建Github静态博客(博客园)](http://www.cnblogs.com/zhcncn/p/4097881.html)\n\n### 1. 配置Hexo\n安装 `git` 和 `node.js` 就不说了,直接找个盘新建一个文件夹,比如 `d:/hexo`,在该目录下右击 `Git Bash Here`\n\n1. `npm install -g hexo` 安装hexo , 此命令容易Error , 请多试几次 , 实在不行就fq吧...\n2. `hexo init` 初始化hexo\n3. `npm install` 在当前目录安装npm\n4. `hexo server` 启动hexo服务\n5. 在浏览器输入 `localhost:4000`,如果能打开网页即成功构建hexo\n6. 按 `ctrl+c` 关闭服务\n7. 在 `github` 上新建一个 `repository` ,名字一定得是`用户名.github.io`, 完毕后将链接模式改为SSH, 原因后面会说\n8. 新建SSH密钥, 执行 `ssh-keygen -t rsa -C “你的邮箱”`, 会让你输入名字,直接回车,然后输密码,也是回车\n9. 打开 `c:/用户/用户名/.ssh/id_rsa.pub`, 复制里面的密钥\n10. 打开 `github个人主页->Settings->SSH and GPG keys->New SSH Key` , `Title` 随意填写, `Key` 填写刚刚复制的密钥内容,然后`Add SSH key` \n11. 执行 `ssh -T git@github.com` , 检测SSH访问是否通畅, 如果结果是hi~xxxx,则表示SSH配置成功.\n12. 修改目录下的 `_config.yml` 文件, 将deploy部分修改如下:\n```\ndeploy:\n  type: git\n  repo: git@github.com:用户名/用户名.github.io.git\n  branch: master\n```\n13. 执行 `hexo npm install hexo-deployer-git --save` 进行保存\n14. `hexo clean`\n15. `hexo g -d`\n16. 在浏览器输入 `用户名.github.io` , 如果可以访问即表示部署成功\n\n### 2. 修改主题\n\n参考\n[有哪些好看的Hexo主题?](http://www.zhihu.com/question/24422335)(知乎)  \n具体的教程在主题的github上都有写\n\n### 3. 如何发表文章?\n\n1. 执行 `hexo new \"你要写的文章的名字\"`\n2. 如果你还没有Markdown, 就赶紧下载这个超好用的轻量级文本编辑器吧 [点我下载Markdownpad](http://markdownpad.com/download.html)\n3. 如果你是 win8 或者 win10 还需要下载 [Markdown Awesomium](http://markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe)\n4. 都安装完毕后就可以愉快的编辑 `.md` 格式的文件了\n\n> **注**: 文章都放在hexo博客目录 `/source/_posts` 下  \n\n### 4. Markdown语法?\n\n参考 [Markdown 11种基本语法](http://www.cnblogs.com/hnrainll/p/3514637.html)\n\n### 5. 为什么要使用SSH而非Https?\n\n因为笔者在每次修改github库的时候都会提示输入我open SSH , 并让我输入用户名和密码 , 由于没有找到好的解决方法 , 所以我索性直接开启SSH模式 , 从此一切顺畅无碍.\n\n### 6. 怎么删除文章 ?\n\n1.  删除文章\n2.  删除根目录下的 `db.json`\n3.  `hexo clean`\n4.  `hexo g -d`","source":"_posts/搭建Hexo教程-一.md","raw":"---\ntitle: 搭建Hexo教程(一)\ndate: 2016-09-09 15:47:42\ntags: hexo\n---\n# 前言\n好久之前就在试着搭建业内流传得很火的Hexo博客框架,今天趁着项目完工,闲着没事又把博客搭建起来了.\n\n给出几个教程\n\n[HEXO+Github,搭建属于自己的博客(简书)](http://www.jianshu.com/p/465830080ea9)\n\n[Hexo搭建Github静态博客(博客园)](http://www.cnblogs.com/zhcncn/p/4097881.html)\n\n### 1. 配置Hexo\n安装 `git` 和 `node.js` 就不说了,直接找个盘新建一个文件夹,比如 `d:/hexo`,在该目录下右击 `Git Bash Here`\n\n1. `npm install -g hexo` 安装hexo , 此命令容易Error , 请多试几次 , 实在不行就fq吧...\n2. `hexo init` 初始化hexo\n3. `npm install` 在当前目录安装npm\n4. `hexo server` 启动hexo服务\n5. 在浏览器输入 `localhost:4000`,如果能打开网页即成功构建hexo\n6. 按 `ctrl+c` 关闭服务\n7. 在 `github` 上新建一个 `repository` ,名字一定得是`用户名.github.io`, 完毕后将链接模式改为SSH, 原因后面会说\n8. 新建SSH密钥, 执行 `ssh-keygen -t rsa -C “你的邮箱”`, 会让你输入名字,直接回车,然后输密码,也是回车\n9. 打开 `c:/用户/用户名/.ssh/id_rsa.pub`, 复制里面的密钥\n10. 打开 `github个人主页->Settings->SSH and GPG keys->New SSH Key` , `Title` 随意填写, `Key` 填写刚刚复制的密钥内容,然后`Add SSH key` \n11. 执行 `ssh -T git@github.com` , 检测SSH访问是否通畅, 如果结果是hi~xxxx,则表示SSH配置成功.\n12. 修改目录下的 `_config.yml` 文件, 将deploy部分修改如下:\n```\ndeploy:\n  type: git\n  repo: git@github.com:用户名/用户名.github.io.git\n  branch: master\n```\n13. 执行 `hexo npm install hexo-deployer-git --save` 进行保存\n14. `hexo clean`\n15. `hexo g -d`\n16. 在浏览器输入 `用户名.github.io` , 如果可以访问即表示部署成功\n\n### 2. 修改主题\n\n参考\n[有哪些好看的Hexo主题?](http://www.zhihu.com/question/24422335)(知乎)  \n具体的教程在主题的github上都有写\n\n### 3. 如何发表文章?\n\n1. 执行 `hexo new \"你要写的文章的名字\"`\n2. 如果你还没有Markdown, 就赶紧下载这个超好用的轻量级文本编辑器吧 [点我下载Markdownpad](http://markdownpad.com/download.html)\n3. 如果你是 win8 或者 win10 还需要下载 [Markdown Awesomium](http://markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe)\n4. 都安装完毕后就可以愉快的编辑 `.md` 格式的文件了\n\n> **注**: 文章都放在hexo博客目录 `/source/_posts` 下  \n\n### 4. Markdown语法?\n\n参考 [Markdown 11种基本语法](http://www.cnblogs.com/hnrainll/p/3514637.html)\n\n### 5. 为什么要使用SSH而非Https?\n\n因为笔者在每次修改github库的时候都会提示输入我open SSH , 并让我输入用户名和密码 , 由于没有找到好的解决方法 , 所以我索性直接开启SSH模式 , 从此一切顺畅无碍.\n\n### 6. 怎么删除文章 ?\n\n1.  删除文章\n2.  删除根目录下的 `db.json`\n3.  `hexo clean`\n4.  `hexo g -d`","slug":"搭建Hexo教程-一","published":1,"updated":"2016-09-09T09:31:51.741Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cisvlbs9z000008aap9ovsp0a","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>好久之前就在试着搭建业内流传得很火的Hexo博客框架,今天趁着项目完工,闲着没事又把博客搭建起来了.</p>\n<p>给出几个教程</p>\n<p><a href=\"http://www.jianshu.com/p/465830080ea9\" target=\"_blank\" rel=\"external\">HEXO+Github,搭建属于自己的博客(简书)</a></p>\n<p><a href=\"http://www.cnblogs.com/zhcncn/p/4097881.html\" target=\"_blank\" rel=\"external\">Hexo搭建Github静态博客(博客园)</a></p>\n<h3 id=\"1-配置Hexo\"><a href=\"#1-配置Hexo\" class=\"headerlink\" title=\"1. 配置Hexo\"></a>1. 配置Hexo</h3><p>安装 <code>git</code> 和 <code>node.js</code> 就不说了,直接找个盘新建一个文件夹,比如 <code>d:/hexo</code>,在该目录下右击 <code>Git Bash Here</code></p>\n<ol>\n<li><code>npm install -g hexo</code> 安装hexo , 此命令容易Error , 请多试几次 , 实在不行就fq吧…</li>\n<li><code>hexo init</code> 初始化hexo</li>\n<li><code>npm install</code> 在当前目录安装npm</li>\n<li><code>hexo server</code> 启动hexo服务</li>\n<li>在浏览器输入 <code>localhost:4000</code>,如果能打开网页即成功构建hexo</li>\n<li>按 <code>ctrl+c</code> 关闭服务</li>\n<li>在 <code>github</code> 上新建一个 <code>repository</code> ,名字一定得是<code>用户名.github.io</code>, 完毕后将链接模式改为SSH, 原因后面会说</li>\n<li>新建SSH密钥, 执行 <code>ssh-keygen -t rsa -C “你的邮箱”</code>, 会让你输入名字,直接回车,然后输密码,也是回车</li>\n<li>打开 <code>c:/用户/用户名/.ssh/id_rsa.pub</code>, 复制里面的密钥</li>\n<li>打开 <code>github个人主页-&gt;Settings-&gt;SSH and GPG keys-&gt;New SSH Key</code> , <code>Title</code> 随意填写, <code>Key</code> 填写刚刚复制的密钥内容,然后<code>Add SSH key</code> </li>\n<li>执行 <code>ssh -T git@github.com</code> , 检测SSH访问是否通畅, 如果结果是hi~xxxx,则表示SSH配置成功.</li>\n<li><p>修改目录下的 <code>_config.yml</code> 文件, 将deploy部分修改如下:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repo: git@github.com:用户名/用户名.github.io.git</div><div class=\"line\">  branch: master</div></pre></td></tr></table></figure>\n</li>\n<li><p>执行 <code>hexo npm install hexo-deployer-git --save</code> 进行保存</p>\n</li>\n<li><code>hexo clean</code></li>\n<li><code>hexo g -d</code></li>\n<li>在浏览器输入 <code>用户名.github.io</code> , 如果可以访问即表示部署成功</li>\n</ol>\n<h3 id=\"2-修改主题\"><a href=\"#2-修改主题\" class=\"headerlink\" title=\"2. 修改主题\"></a>2. 修改主题</h3><p>参考<br><a href=\"http://www.zhihu.com/question/24422335\" target=\"_blank\" rel=\"external\">有哪些好看的Hexo主题?</a>(知乎)<br>具体的教程在主题的github上都有写</p>\n<h3 id=\"3-如何发表文章\"><a href=\"#3-如何发表文章\" class=\"headerlink\" title=\"3. 如何发表文章?\"></a>3. 如何发表文章?</h3><ol>\n<li>执行 <code>hexo new &quot;你要写的文章的名字&quot;</code></li>\n<li>如果你还没有Markdown, 就赶紧下载这个超好用的轻量级文本编辑器吧 <a href=\"http://markdownpad.com/download.html\" target=\"_blank\" rel=\"external\">点我下载Markdownpad</a></li>\n<li>如果你是 win8 或者 win10 还需要下载 <a href=\"http://markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe\" target=\"_blank\" rel=\"external\">Markdown Awesomium</a></li>\n<li>都安装完毕后就可以愉快的编辑 <code>.md</code> 格式的文件了</li>\n</ol>\n<blockquote>\n<p><strong>注</strong>: 文章都放在hexo博客目录 <code>/source/_posts</code> 下  </p>\n</blockquote>\n<h3 id=\"4-Markdown语法\"><a href=\"#4-Markdown语法\" class=\"headerlink\" title=\"4. Markdown语法?\"></a>4. Markdown语法?</h3><p>参考 <a href=\"http://www.cnblogs.com/hnrainll/p/3514637.html\" target=\"_blank\" rel=\"external\">Markdown 11种基本语法</a></p>\n<h3 id=\"5-为什么要使用SSH而非Https\"><a href=\"#5-为什么要使用SSH而非Https\" class=\"headerlink\" title=\"5. 为什么要使用SSH而非Https?\"></a>5. 为什么要使用SSH而非Https?</h3><p>因为笔者在每次修改github库的时候都会提示输入我open SSH , 并让我输入用户名和密码 , 由于没有找到好的解决方法 , 所以我索性直接开启SSH模式 , 从此一切顺畅无碍.</p>\n<h3 id=\"6-怎么删除文章\"><a href=\"#6-怎么删除文章\" class=\"headerlink\" title=\"6. 怎么删除文章 ?\"></a>6. 怎么删除文章 ?</h3><ol>\n<li>删除文章</li>\n<li>删除根目录下的 <code>db.json</code></li>\n<li><code>hexo clean</code></li>\n<li><code>hexo g -d</code></li>\n</ol>\n","excerpt":"","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>好久之前就在试着搭建业内流传得很火的Hexo博客框架,今天趁着项目完工,闲着没事又把博客搭建起来了.</p>\n<p>给出几个教程</p>\n<p><a href=\"http://www.jianshu.com/p/465830080ea9\">HEXO+Github,搭建属于自己的博客(简书)</a></p>\n<p><a href=\"http://www.cnblogs.com/zhcncn/p/4097881.html\">Hexo搭建Github静态博客(博客园)</a></p>\n<h3 id=\"1-配置Hexo\"><a href=\"#1-配置Hexo\" class=\"headerlink\" title=\"1. 配置Hexo\"></a>1. 配置Hexo</h3><p>安装 <code>git</code> 和 <code>node.js</code> 就不说了,直接找个盘新建一个文件夹,比如 <code>d:/hexo</code>,在该目录下右击 <code>Git Bash Here</code></p>\n<ol>\n<li><code>npm install -g hexo</code> 安装hexo , 此命令容易Error , 请多试几次 , 实在不行就fq吧…</li>\n<li><code>hexo init</code> 初始化hexo</li>\n<li><code>npm install</code> 在当前目录安装npm</li>\n<li><code>hexo server</code> 启动hexo服务</li>\n<li>在浏览器输入 <code>localhost:4000</code>,如果能打开网页即成功构建hexo</li>\n<li>按 <code>ctrl+c</code> 关闭服务</li>\n<li>在 <code>github</code> 上新建一个 <code>repository</code> ,名字一定得是<code>用户名.github.io</code>, 完毕后将链接模式改为SSH, 原因后面会说</li>\n<li>新建SSH密钥, 执行 <code>ssh-keygen -t rsa -C “你的邮箱”</code>, 会让你输入名字,直接回车,然后输密码,也是回车</li>\n<li>打开 <code>c:/用户/用户名/.ssh/id_rsa.pub</code>, 复制里面的密钥</li>\n<li>打开 <code>github个人主页-&gt;Settings-&gt;SSH and GPG keys-&gt;New SSH Key</code> , <code>Title</code> 随意填写, <code>Key</code> 填写刚刚复制的密钥内容,然后<code>Add SSH key</code> </li>\n<li>执行 <code>ssh -T git@github.com</code> , 检测SSH访问是否通畅, 如果结果是hi~xxxx,则表示SSH配置成功.</li>\n<li><p>修改目录下的 <code>_config.yml</code> 文件, 将deploy部分修改如下:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repo: git@github.com:用户名/用户名.github.io.git</div><div class=\"line\">  branch: master</div></pre></td></tr></table></figure>\n</li>\n<li><p>执行 <code>hexo npm install hexo-deployer-git --save</code> 进行保存</p>\n</li>\n<li><code>hexo clean</code></li>\n<li><code>hexo g -d</code></li>\n<li>在浏览器输入 <code>用户名.github.io</code> , 如果可以访问即表示部署成功</li>\n</ol>\n<h3 id=\"2-修改主题\"><a href=\"#2-修改主题\" class=\"headerlink\" title=\"2. 修改主题\"></a>2. 修改主题</h3><p>参考<br><a href=\"http://www.zhihu.com/question/24422335\">有哪些好看的Hexo主题?</a>(知乎)<br>具体的教程在主题的github上都有写</p>\n<h3 id=\"3-如何发表文章\"><a href=\"#3-如何发表文章\" class=\"headerlink\" title=\"3. 如何发表文章?\"></a>3. 如何发表文章?</h3><ol>\n<li>执行 <code>hexo new &quot;你要写的文章的名字&quot;</code></li>\n<li>如果你还没有Markdown, 就赶紧下载这个超好用的轻量级文本编辑器吧 <a href=\"http://markdownpad.com/download.html\">点我下载Markdownpad</a></li>\n<li>如果你是 win8 或者 win10 还需要下载 <a href=\"http://markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe\">Markdown Awesomium</a></li>\n<li>都安装完毕后就可以愉快的编辑 <code>.md</code> 格式的文件了</li>\n</ol>\n<blockquote>\n<p><strong>注</strong>: 文章都放在hexo博客目录 <code>/source/_posts</code> 下  </p>\n</blockquote>\n<h3 id=\"4-Markdown语法\"><a href=\"#4-Markdown语法\" class=\"headerlink\" title=\"4. Markdown语法?\"></a>4. Markdown语法?</h3><p>参考 <a href=\"http://www.cnblogs.com/hnrainll/p/3514637.html\">Markdown 11种基本语法</a></p>\n<h3 id=\"5-为什么要使用SSH而非Https\"><a href=\"#5-为什么要使用SSH而非Https\" class=\"headerlink\" title=\"5. 为什么要使用SSH而非Https?\"></a>5. 为什么要使用SSH而非Https?</h3><p>因为笔者在每次修改github库的时候都会提示输入我open SSH , 并让我输入用户名和密码 , 由于没有找到好的解决方法 , 所以我索性直接开启SSH模式 , 从此一切顺畅无碍.</p>\n<h3 id=\"6-怎么删除文章\"><a href=\"#6-怎么删除文章\" class=\"headerlink\" title=\"6. 怎么删除文章 ?\"></a>6. 怎么删除文章 ?</h3><ol>\n<li>删除文章</li>\n<li>删除根目录下的 <code>db.json</code></li>\n<li><code>hexo clean</code></li>\n<li><code>hexo g -d</code></li>\n</ol>\n"},{"title":"搭建Hexo教程(二)","date":"2016-09-09T07:55:58.000Z","_content":"### 前言\n关于搭建Hexo的基础教程我已经写出来了 [搭建Hexo教程(一)](https://xswyt1543.github.io/2016/09/09/%E6%90%AD%E5%BB%BAHexo%E6%95%99%E7%A8%8B-%E4%B8%80/) , 可是如果有一天 get a new 笔记本 , 是否还要执行前面的教程呢 , 当然可以不 , 但要做出一些取舍.\n  \n* 如果你有这种需求(更换电脑), 就不要按 `教程一` 来搭建 , 请按照本文章来进行  \n* 更新 / 提交博客的方式会更加麻烦  \n\n### 1. 怎么做 ?\n先看看  \n[使用hexo , 如果换了电脑怎么更新博客 ?](https://www.zhihu.com/question/21193762)  \n\n当然 , 你也可以不看 ,直接看我写的就好了...(。・・)ノ \n\n***\n\n*  需要建立 `2` 个分支 , 一个是默认的 `master` , 一个是 `hexo` , 新的分支的名字可以随便起~\n*  新建一个文件夹 , 依次执行  \n*  `git bash`  \n*  `git clone 你的仓库的SSH地址` \n*  `git init`\n*  新建分支 , 楼主在这踩了坑 , 网上说的那些 **新建branch** 的命令都不起作用 , 在看了大量教程之后 , 才发现正确做法是 `git checkout -b xxx` , `xxx` 是你要新建的分支的名字 , 而这条命令会自动 `新建` 分支并 `跳到` 这条分支上去 , 是不是很简单方便?\n*  这个时候的分支应该是挂载在你的新分支上的 , 不过这还没完 , 到你的仓库去 , `branches -> change default branch -> 选择你的新分支 -> Update`\n> 然而重点在后面(* \"･∀･)ﾉ――◎\n\n* 执行`npm install hexo`\n* `hexo init`\n* `npm install`\n* 修改 `_config.yml` 文件 , 将 `branch` 配置为 `master` 分支 , `repo` 是仓库地址(ssh) , `type` 为 `git` , 还有主题 , 标题 , 介绍 等等\n* 如果你还没有配置 `SSH` , 就去看看 [搭建Hexo教程一](https://xswyt1543.github.io/2016/09/09/%E6%90%AD%E5%BB%BAHexo%E6%95%99%E7%A8%8B-%E4%B8%80/) 把\n* 执行 `npm install hexo-deployer-git --save`\n\n> 请确认已切换到新分支 , 而非 `master` 分支\n\n* 执行 `git add .`\n\n> 这里有可能会出现 `file name too long` 的错误 , 解决方法是执行 `git config core.longpaths true` , 然后再执行 `git add .`\n\n* `git commit -m \"...\"`\n* `git push origin xxx` 通过 `xxx` 分支修改\n* `hexo g -d` 通过 `matser` 分支修改\n\n`create` 部分就到这里吧...\n\n### 2. 每次更新提交要怎么做 ?\n1. `git add .`\n2. `git commit -m \"...\"`\n3. `git push origin xxx`  \n4. `hexo g -d`   \n\n### 3. 重点: 在新的环境下怎么做?\n1. 将仓库的内容 `clone` 下来\n2. `git init`\n3. `npm install hexo`\n4. `npm install`\n5. `npm install hexo-deployer-git`\n> 切记,不要执行`hexo init`\n\n### 4. 双分支的用意?\n\n* `master` 分支拿来装生成的静态网页\n* `xxx` 分支拿来装 `hexo` 搭建的原始文件\n* 平时更新都在 `master` 分支\n* 到了新环境只需要 `clone` `xxx` 分支即可.是不是很方便呢?\n\n>对了 , 需要说明的是 `git` 操作是对当前的分支操作 , 而 `hexo` 是对 `_config.yml` 里面配置的 `branch` 操作的  \n#### The end","source":"_posts/搭建Hexo教程-二.md","raw":"---\ntitle: 搭建Hexo教程(二)\ndate: 2016-09-09 15:55:58\ntags: hexo\n---\n### 前言\n关于搭建Hexo的基础教程我已经写出来了 [搭建Hexo教程(一)](https://xswyt1543.github.io/2016/09/09/%E6%90%AD%E5%BB%BAHexo%E6%95%99%E7%A8%8B-%E4%B8%80/) , 可是如果有一天 get a new 笔记本 , 是否还要执行前面的教程呢 , 当然可以不 , 但要做出一些取舍.\n  \n* 如果你有这种需求(更换电脑), 就不要按 `教程一` 来搭建 , 请按照本文章来进行  \n* 更新 / 提交博客的方式会更加麻烦  \n\n### 1. 怎么做 ?\n先看看  \n[使用hexo , 如果换了电脑怎么更新博客 ?](https://www.zhihu.com/question/21193762)  \n\n当然 , 你也可以不看 ,直接看我写的就好了...(。・・)ノ \n\n***\n\n*  需要建立 `2` 个分支 , 一个是默认的 `master` , 一个是 `hexo` , 新的分支的名字可以随便起~\n*  新建一个文件夹 , 依次执行  \n*  `git bash`  \n*  `git clone 你的仓库的SSH地址` \n*  `git init`\n*  新建分支 , 楼主在这踩了坑 , 网上说的那些 **新建branch** 的命令都不起作用 , 在看了大量教程之后 , 才发现正确做法是 `git checkout -b xxx` , `xxx` 是你要新建的分支的名字 , 而这条命令会自动 `新建` 分支并 `跳到` 这条分支上去 , 是不是很简单方便?\n*  这个时候的分支应该是挂载在你的新分支上的 , 不过这还没完 , 到你的仓库去 , `branches -> change default branch -> 选择你的新分支 -> Update`\n> 然而重点在后面(* \"･∀･)ﾉ――◎\n\n* 执行`npm install hexo`\n* `hexo init`\n* `npm install`\n* 修改 `_config.yml` 文件 , 将 `branch` 配置为 `master` 分支 , `repo` 是仓库地址(ssh) , `type` 为 `git` , 还有主题 , 标题 , 介绍 等等\n* 如果你还没有配置 `SSH` , 就去看看 [搭建Hexo教程一](https://xswyt1543.github.io/2016/09/09/%E6%90%AD%E5%BB%BAHexo%E6%95%99%E7%A8%8B-%E4%B8%80/) 把\n* 执行 `npm install hexo-deployer-git --save`\n\n> 请确认已切换到新分支 , 而非 `master` 分支\n\n* 执行 `git add .`\n\n> 这里有可能会出现 `file name too long` 的错误 , 解决方法是执行 `git config core.longpaths true` , 然后再执行 `git add .`\n\n* `git commit -m \"...\"`\n* `git push origin xxx` 通过 `xxx` 分支修改\n* `hexo g -d` 通过 `matser` 分支修改\n\n`create` 部分就到这里吧...\n\n### 2. 每次更新提交要怎么做 ?\n1. `git add .`\n2. `git commit -m \"...\"`\n3. `git push origin xxx`  \n4. `hexo g -d`   \n\n### 3. 重点: 在新的环境下怎么做?\n1. 将仓库的内容 `clone` 下来\n2. `git init`\n3. `npm install hexo`\n4. `npm install`\n5. `npm install hexo-deployer-git`\n> 切记,不要执行`hexo init`\n\n### 4. 双分支的用意?\n\n* `master` 分支拿来装生成的静态网页\n* `xxx` 分支拿来装 `hexo` 搭建的原始文件\n* 平时更新都在 `master` 分支\n* 到了新环境只需要 `clone` `xxx` 分支即可.是不是很方便呢?\n\n>对了 , 需要说明的是 `git` 操作是对当前的分支操作 , 而 `hexo` 是对 `_config.yml` 里面配置的 `branch` 操作的  \n#### The end","slug":"搭建Hexo教程-二","published":1,"updated":"2016-09-09T10:03:21.784Z","_id":"cisvlbsa4000108aafbxdfibu","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>关于搭建Hexo的基础教程我已经写出来了 <a href=\"https://xswyt1543.github.io/2016/09/09/%E6%90%AD%E5%BB%BAHexo%E6%95%99%E7%A8%8B-%E4%B8%80/\" target=\"_blank\" rel=\"external\">搭建Hexo教程(一)</a> , 可是如果有一天 get a new 笔记本 , 是否还要执行前面的教程呢 , 当然可以不 , 但要做出一些取舍.</p>\n<ul>\n<li>如果你有这种需求(更换电脑), 就不要按 <code>教程一</code> 来搭建 , 请按照本文章来进行  </li>\n<li>更新 / 提交博客的方式会更加麻烦  </li>\n</ul>\n<h3 id=\"1-怎么做\"><a href=\"#1-怎么做\" class=\"headerlink\" title=\"1. 怎么做 ?\"></a>1. 怎么做 ?</h3><p>先看看<br><a href=\"https://www.zhihu.com/question/21193762\" target=\"_blank\" rel=\"external\">使用hexo , 如果换了电脑怎么更新博客 ?</a>  </p>\n<p>当然 , 你也可以不看 ,直接看我写的就好了…(。・・)ノ </p>\n<hr>\n<ul>\n<li>需要建立 <code>2</code> 个分支 , 一个是默认的 <code>master</code> , 一个是 <code>hexo</code> , 新的分支的名字可以随便起~</li>\n<li>新建一个文件夹 , 依次执行  </li>\n<li><code>git bash</code>  </li>\n<li><code>git clone 你的仓库的SSH地址</code> </li>\n<li><code>git init</code></li>\n<li>新建分支 , 楼主在这踩了坑 , 网上说的那些 <strong>新建branch</strong> 的命令都不起作用 , 在看了大量教程之后 , 才发现正确做法是 <code>git checkout -b xxx</code> , <code>xxx</code> 是你要新建的分支的名字 , 而这条命令会自动 <code>新建</code> 分支并 <code>跳到</code> 这条分支上去 , 是不是很简单方便?</li>\n<li><p>这个时候的分支应该是挂载在你的新分支上的 , 不过这还没完 , 到你的仓库去 , <code>branches -&gt; change default branch -&gt; 选择你的新分支 -&gt; Update</code></p>\n<blockquote>\n<p>然而重点在后面(* “･∀･)ﾉ――◎</p>\n</blockquote>\n</li>\n<li><p>执行<code>npm install hexo</code></p>\n</li>\n<li><code>hexo init</code></li>\n<li><code>npm install</code></li>\n<li>修改 <code>_config.yml</code> 文件 , 将 <code>branch</code> 配置为 <code>master</code> 分支 , <code>repo</code> 是仓库地址(ssh) , <code>type</code> 为 <code>git</code> , 还有主题 , 标题 , 介绍 等等</li>\n<li>如果你还没有配置 <code>SSH</code> , 就去看看 <a href=\"https://xswyt1543.github.io/2016/09/09/%E6%90%AD%E5%BB%BAHexo%E6%95%99%E7%A8%8B-%E4%B8%80/\" target=\"_blank\" rel=\"external\">搭建Hexo教程一</a> 把</li>\n<li>执行 <code>npm install hexo-deployer-git --save</code></li>\n</ul>\n<blockquote>\n<p>请确认已切换到新分支 , 而非 <code>master</code> 分支</p>\n</blockquote>\n<ul>\n<li>执行 <code>git add .</code></li>\n</ul>\n<blockquote>\n<p>这里有可能会出现 <code>file name too long</code> 的错误 , 解决方法是执行 <code>git config core.longpaths true</code> , 然后再执行 <code>git add .</code></p>\n</blockquote>\n<ul>\n<li><code>git commit -m &quot;...&quot;</code></li>\n<li><code>git push origin xxx</code> 通过 <code>xxx</code> 分支修改</li>\n<li><code>hexo g -d</code> 通过 <code>matser</code> 分支修改</li>\n</ul>\n<p><code>create</code> 部分就到这里吧…</p>\n<h3 id=\"2-每次更新提交要怎么做\"><a href=\"#2-每次更新提交要怎么做\" class=\"headerlink\" title=\"2. 每次更新提交要怎么做 ?\"></a>2. 每次更新提交要怎么做 ?</h3><ol>\n<li><code>git add .</code></li>\n<li><code>git commit -m &quot;...&quot;</code></li>\n<li><code>git push origin xxx</code>  </li>\n<li><code>hexo g -d</code>   </li>\n</ol>\n<h3 id=\"3-重点-在新的环境下怎么做\"><a href=\"#3-重点-在新的环境下怎么做\" class=\"headerlink\" title=\"3. 重点: 在新的环境下怎么做?\"></a>3. 重点: 在新的环境下怎么做?</h3><ol>\n<li>将仓库的内容 <code>clone</code> 下来</li>\n<li><code>git init</code></li>\n<li><code>npm install hexo</code></li>\n<li><code>npm install</code></li>\n<li><code>npm install hexo-deployer-git</code><blockquote>\n<p>切记,不要执行<code>hexo init</code></p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"4-双分支的用意\"><a href=\"#4-双分支的用意\" class=\"headerlink\" title=\"4. 双分支的用意?\"></a>4. 双分支的用意?</h3><ul>\n<li><code>master</code> 分支拿来装生成的静态网页</li>\n<li><code>xxx</code> 分支拿来装 <code>hexo</code> 搭建的原始文件</li>\n<li>平时更新都在 <code>master</code> 分支</li>\n<li>到了新环境只需要 <code>clone</code> <code>xxx</code> 分支即可.是不是很方便呢?</li>\n</ul>\n<blockquote>\n<p>对了 , 需要说明的是 <code>git</code> 操作是对当前的分支操作 , 而 <code>hexo</code> 是对 <code>_config.yml</code> 里面配置的 <code>branch</code> 操作的  </p>\n<h4 id=\"The-end\"><a href=\"#The-end\" class=\"headerlink\" title=\"The end\"></a>The end</h4></blockquote>\n","excerpt":"","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>关于搭建Hexo的基础教程我已经写出来了 <a href=\"https://xswyt1543.github.io/2016/09/09/%E6%90%AD%E5%BB%BAHexo%E6%95%99%E7%A8%8B-%E4%B8%80/\">搭建Hexo教程(一)</a> , 可是如果有一天 get a new 笔记本 , 是否还要执行前面的教程呢 , 当然可以不 , 但要做出一些取舍.</p>\n<ul>\n<li>如果你有这种需求(更换电脑), 就不要按 <code>教程一</code> 来搭建 , 请按照本文章来进行  </li>\n<li>更新 / 提交博客的方式会更加麻烦  </li>\n</ul>\n<h3 id=\"1-怎么做\"><a href=\"#1-怎么做\" class=\"headerlink\" title=\"1. 怎么做 ?\"></a>1. 怎么做 ?</h3><p>先看看<br><a href=\"https://www.zhihu.com/question/21193762\">使用hexo , 如果换了电脑怎么更新博客 ?</a>  </p>\n<p>当然 , 你也可以不看 ,直接看我写的就好了…(。・・)ノ </p>\n<hr>\n<ul>\n<li>需要建立 <code>2</code> 个分支 , 一个是默认的 <code>master</code> , 一个是 <code>hexo</code> , 新的分支的名字可以随便起~</li>\n<li>新建一个文件夹 , 依次执行  </li>\n<li><code>git bash</code>  </li>\n<li><code>git clone 你的仓库的SSH地址</code> </li>\n<li><code>git init</code></li>\n<li>新建分支 , 楼主在这踩了坑 , 网上说的那些 <strong>新建branch</strong> 的命令都不起作用 , 在看了大量教程之后 , 才发现正确做法是 <code>git checkout -b xxx</code> , <code>xxx</code> 是你要新建的分支的名字 , 而这条命令会自动 <code>新建</code> 分支并 <code>跳到</code> 这条分支上去 , 是不是很简单方便?</li>\n<li><p>这个时候的分支应该是挂载在你的新分支上的 , 不过这还没完 , 到你的仓库去 , <code>branches -&gt; change default branch -&gt; 选择你的新分支 -&gt; Update</code></p>\n<blockquote>\n<p>然而重点在后面(* “･∀･)ﾉ――◎</p>\n</blockquote>\n</li>\n<li><p>执行<code>npm install hexo</code></p>\n</li>\n<li><code>hexo init</code></li>\n<li><code>npm install</code></li>\n<li>修改 <code>_config.yml</code> 文件 , 将 <code>branch</code> 配置为 <code>master</code> 分支 , <code>repo</code> 是仓库地址(ssh) , <code>type</code> 为 <code>git</code> , 还有主题 , 标题 , 介绍 等等</li>\n<li>如果你还没有配置 <code>SSH</code> , 就去看看 <a href=\"https://xswyt1543.github.io/2016/09/09/%E6%90%AD%E5%BB%BAHexo%E6%95%99%E7%A8%8B-%E4%B8%80/\">搭建Hexo教程一</a> 把</li>\n<li>执行 <code>npm install hexo-deployer-git --save</code></li>\n</ul>\n<blockquote>\n<p>请确认已切换到新分支 , 而非 <code>master</code> 分支</p>\n</blockquote>\n<ul>\n<li>执行 <code>git add .</code></li>\n</ul>\n<blockquote>\n<p>这里有可能会出现 <code>file name too long</code> 的错误 , 解决方法是执行 <code>git config core.longpaths true</code> , 然后再执行 <code>git add .</code></p>\n</blockquote>\n<ul>\n<li><code>git commit -m &quot;...&quot;</code></li>\n<li><code>git push origin xxx</code> 通过 <code>xxx</code> 分支修改</li>\n<li><code>hexo g -d</code> 通过 <code>matser</code> 分支修改</li>\n</ul>\n<p><code>create</code> 部分就到这里吧…</p>\n<h3 id=\"2-每次更新提交要怎么做\"><a href=\"#2-每次更新提交要怎么做\" class=\"headerlink\" title=\"2. 每次更新提交要怎么做 ?\"></a>2. 每次更新提交要怎么做 ?</h3><ol>\n<li><code>git add .</code></li>\n<li><code>git commit -m &quot;...&quot;</code></li>\n<li><code>git push origin xxx</code>  </li>\n<li><code>hexo g -d</code>   </li>\n</ol>\n<h3 id=\"3-重点-在新的环境下怎么做\"><a href=\"#3-重点-在新的环境下怎么做\" class=\"headerlink\" title=\"3. 重点: 在新的环境下怎么做?\"></a>3. 重点: 在新的环境下怎么做?</h3><ol>\n<li>将仓库的内容 <code>clone</code> 下来</li>\n<li><code>git init</code></li>\n<li><code>npm install hexo</code></li>\n<li><code>npm install</code></li>\n<li><code>npm install hexo-deployer-git</code><blockquote>\n<p>切记,不要执行<code>hexo init</code></p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"4-双分支的用意\"><a href=\"#4-双分支的用意\" class=\"headerlink\" title=\"4. 双分支的用意?\"></a>4. 双分支的用意?</h3><ul>\n<li><code>master</code> 分支拿来装生成的静态网页</li>\n<li><code>xxx</code> 分支拿来装 <code>hexo</code> 搭建的原始文件</li>\n<li>平时更新都在 <code>master</code> 分支</li>\n<li>到了新环境只需要 <code>clone</code> <code>xxx</code> 分支即可.是不是很方便呢?</li>\n</ul>\n<blockquote>\n<p>对了 , 需要说明的是 <code>git</code> 操作是对当前的分支操作 , 而 <code>hexo</code> 是对 <code>_config.yml</code> 里面配置的 <code>branch</code> 操作的  </p>\n<h4 id=\"The-end\"><a href=\"#The-end\" class=\"headerlink\" title=\"The end\"></a>The end</h4></blockquote>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cisvlbs9z000008aap9ovsp0a","tag_id":"cisvlbsa7000208aags9gk8d3","_id":"cisvlbsad000408aaonl68t19"},{"post_id":"cisvlbsa4000108aafbxdfibu","tag_id":"cisvlbsa7000208aags9gk8d3","_id":"cisvlbsad000508aaklxnv94b"}],"Tag":[{"name":"hexo","_id":"cisvlbsa7000208aags9gk8d3"}]}}